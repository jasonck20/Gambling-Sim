import pygame
import time
import sys
from random import randint

class Button:
    
    def __init__(self,x,y):
        self.img=button
        self.rect=self.img.get_rect()
        self.rect.topleft=(x,y)
        self.clicked=False
        self.count = 0

    def draw(self):
        pos = pygame.mouse.get_pos()
        if self.rect.collidepoint(pos):
            if pygame.mouse.get_pressed()[0] and not self.clicked:
                self.clicked=True
                time.sleep(1)
                self.count +=1
                open_door()
            if not pygame.mouse.get_pressed()[0]:
                self.clicked=False

            if self.count == 3:
                return 0
                

       
        screen.blit(self.img, (self.rect.x, self.rect.y))



class Image:
    def __init__(self,x,y, img):
        self.img=img
        self.rect=self.img.get_rect()
        self.rect.topleft=(x,y)

    def draw(self):
        screen.blit(self.img, (self.rect.x, self.rect.y))

pygame.init()
clock=pygame.time.Clock()
FPS = 30
width = 800
height = 500
screen = pygame.display.set_mode((width, height))
white = (255,255,255)
black = (0, 0,0 )

door = pygame.image.load('slidedoor.jpg')
door = pygame.transform.scale(door, (125,130))
button = pygame.image.load('button.png')
button = pygame.transform.scale(button, (200,200))
slot_machine = pygame.image.load('attachment.png')
slot_machine = pygame.transform.scale(slot_machine, (800,500))
crying = pygame.image.load("crying.jpg").convert()
crying = pygame.transform.scale(crying, (100,100))
squidward = pygame.image.load("squidward.png").convert()
squidward = pygame.transform.scale(squidward, (100,100))

pos_1 = width - 320
pos_2 = width - 500
pos_3 = width - 650
hei_pos = height/2 -75

screen.fill(white)
side =width/2 -100
top = height-200
B=Button(side,top)
list_of_image = ['grape.jpg', 'banana_final.jpg', 'chili.jpg']


green = (0, 255, 0)
blue = (0, 0, 128)
loss_list = []
win_list = []

def open_door():
    val1 = randint(0,2)
    val2 = randint(0,2)
    val3 = randint(0,2)
    Img1 = Image(pos_1 + 40, hei_pos, pygame.transform.scale(pygame.image.load(list_of_image[val1]), (100,100)))    
    Img2 = Image(pos_2 + 40, hei_pos, pygame.transform.scale(pygame.image.load(list_of_image[val2]), (100,100)))
    Img3 = Image(pos_3 + 40, hei_pos, pygame.transform.scale(pygame.image.load(list_of_image[val3]), (100,100)))
    Img1.draw()
    Img2.draw()
    Img3.draw()
    if val1 == val2 and val2 == val3:
        print("winner")
        win_list.append(1)
    else:
        print('Loser')
        loss_list.append(1)

    if len(loss_list) == 1:
        screen.blit(crying, (0,0))
    elif len(loss_list) == 2:
        screen.blit(squidward, (200,0))
    

def display_stats():
    screen.fill((0,0,0))

    


def main():
    global run

    run = True
    x = 100
    y = 100
    screen.blit(slot_machine, (0,0))
    while run:
        
        val = B.draw()
        if val == 0:
            
            display_stats()
         
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

            

        pygame.display.flip()

    pygame.quit()

main()